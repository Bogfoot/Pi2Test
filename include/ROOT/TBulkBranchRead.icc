// Author: Brian Bockelman 14/06/17

/*************************************************************************
 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers.               *
 * All rights reserved.                                                  *
 *                                                                       *
 * For the licensing terms see $ROOTSYS/LICENSE.                         *
 * For the list of contributors see $ROOTSYS/README/CREDITS.             *
 *************************************************************************/

#ifndef ROOT_TBulkBranchRead_icc
#define ROOT_TBulkBranchRead_icc

//////////////////////////////////////////////////////////////////////////
//                                                                      //
// TBulkBranchRead                                                      //
//                                                                      //
// TBulkBranchRead is used to check if a branch supports bulk API;      //
// it also includes a set of API that allows reading serialized data    //
// directly into user-defined buffer without going through ROOT-        //
// deserialization code path by default.                                //
//////////////////////////////////////////////////////////////////////////

#include "ROOT/TBulkBranchRead.hxx" ///< A helper class for bulk IO (multiple events per call) operations.
#include "TBranch.h"

namespace ROOT {
namespace Experimental {
namespace Internal {


inline Int_t  TBulkBranchRead::GetBulkEntries(Long64_t evt, TBuffer& user_buf) { return fParent.GetBulkEntries(evt, user_buf); }
inline Int_t  TBulkBranchRead::GetEntriesSerialized(Long64_t evt, TBuffer& user_buf) { return fParent.GetEntriesSerialized(evt, user_buf); }
inline Int_t  TBulkBranchRead::GetEntriesSerialized(Long64_t evt, TBuffer& user_buf, TBuffer* count_buf) { return fParent.GetEntriesSerialized(evt, user_buf, count_buf); }
inline Bool_t TBulkBranchRead::SupportsBulkRead() const { return fParent.SupportsBulkRead(); }

}  // Internal
}  // Experimental
}  // ROOT

#endif  // ROOT_TBulkBranchRead_icc
